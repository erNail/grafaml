---
# -- Wether to render only the dashboard JSON, or the entire ConfigMap.
# Set this to true if you are not interested in deploying the Dashboard in a Kubernetes Cluster.
# Use `helm template ./charts/grafaml --set onlyRenderDashboardJson=true | tail -n +3 > dashboard.json`
# to get the dashboard JSON model as a file.
#
onlyRenderDashboardJson: false

# -- Additional labels to add to the ConfigMap.
# Ref: [Kubernetes Labels](https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/)
#
extraLabels:
  created-with: "grafaml"

# -- The displayed title of the Dashboard.
# Ref: [Grafana JSON Fields](https://grafana.com/docs/grafana/latest/dashboards/build-dashboards/view-dashboard-json-model/#json-fields)
#
title: "Grafana Dashboard"

# -- The tags of the dashboard.
# Ref: [Grafana JSON Fields](https://grafana.com/docs/grafana/latest/dashboards/build-dashboards/view-dashboard-json-model/#json-fields)
#
tags:
  - "grafaml"

# -- The style of the dashboard, either "dark" or "light".
# Ref: [Grafana JSON Fields](https://grafana.com/docs/grafana/latest/dashboards/build-dashboards/view-dashboard-json-model/#json-fields)
#
style: "dark"

# -- The timezone of the dashboard, either "utc" or "browser".
# Ref: [Grafana JSON Fields](https://grafana.com/docs/grafana/latest/dashboards/build-dashboards/view-dashboard-json-model/#json-fields)
#
timezone: "browser"

# -- Wether the dashboard is editable or not.
# Ref: [Grafana JSON Fields](https://grafana.com/docs/grafana/latest/dashboards/build-dashboards/view-dashboard-json-model/#json-fields)
#
editable: true

# -- The tooltip behavior of the dashboard.
# 0 for no shared crosshair or tooltip (default), 1 for shared crosshair, 2 for shared crosshair and shared tooltip.
# Ref: [Grafana JSON Fields](https://grafana.com/docs/grafana/latest/dashboards/build-dashboards/view-dashboard-json-model/#json-fields)
#
graphTooltip: "0"

# -- The auto-refresh interval.
# Ref: [Grafana JSON Fields](https://grafana.com/docs/grafana/latest/dashboards/build-dashboards/view-dashboard-json-model/#json-fields)
#
refresh: "30s"

# -- The time range for the dashboard.
# Ref: [Grafana JSON Fields](https://grafana.com/docs/grafana/latest/dashboards/build-dashboards/view-dashboard-json-model/#json-fields)
#
time:
  from: "now-6h"
  to: "now"

# -- The configuration of the time picker.
# Check [Grafana JSON Timepicker](https://grafana.com/docs/grafana/latest/dashboards/build-dashboards/view-dashboard-json-model/#timepicker)
# for all possible options.
# Ref: [Grafana JSON Timepicker](https://grafana.com/docs/grafana/latest/dashboards/build-dashboards/view-dashboard-json-model/#timepicker)
#
timepicker:
  # -- Wether the timepicker configuration is rendered or not.
  #
  enabled: false
  # -- Wether the timepicker is enabled or not.
  #
  enable: true
  collapse: false
  notice: false
  now: true
  status: "Stable"
  type: "timepicker"

# -- The dashboard template variables.
# Ref: [Grafana JSON Templating](https://grafana.com/docs/grafana/latest/dashboards/build-dashboards/view-dashboard-json-model/#templating)
#
templating:
  enabled: false
  # -- Check
  # [Grafana JSON Templating](https://grafana.com/docs/grafana/latest/dashboards/build-dashboards/view-dashboard-json-model/#templating)
  # for all possible options.
  #
  list:
    - allFormat: "wildcard"
      current:
        text: "prod"
        value: "prod"
      includeAll: true
      name: "environment"
      query: "tag_values(cpu.utilization.average,env)"
      type: "query"
      multi: true

# -- The dashboard annotations.
# Ref: [Grafana JSON Visualizations](https://grafana.com/docs/grafana/latest/dashboards/build-dashboards/annotate-visualizations/)
#
annotations:
  enabled: false
  # -- Grafana does not provide a full list with options.
  # To find out about other options, create the desired annotations
  # in the Grafana UI, inspect the JSON, and transform it to YAML.
  list:
    - name: "My Annotation"
      expr: "up"

# -- The dashboard panels.
# The positioning will be handled automatically, so there is no need to define the "gridPos"
# Ref: [Grafana JSON Panels](https://grafana.com/docs/grafana/latest/dashboards/build-dashboards/view-dashboard-json-model/#panels)
#
panels:
  # -- The number of columns of the grid in which the panels are placed.
  # With 2 columns, each panel will have a width of 12
  #
  columns: 2
  panelHeight: 8
  # -- Check [Grafana JSON Panels](https://grafana.com/docs/grafana/latest/dashboards/build-dashboards/view-dashboard-json-model/#panels)
  # for more options.
  # Grafana does not provide a full list with options.
  # To find out about other options, create the desired panels
  # in the Grafana UI, inspect the panel JSON, and transform it to YAML.
  # For example dashboards created with grafaml, check out the [example charts](https://github.com/erNail/grafaml/tree/main/example-charts)
  #
  list:
    - title: "Prometheus Targets Up"
      type: "stat"
      targets:
        - expr: "up"
    - title: "Resource Usage in Percent"
      description: "Memory and CPU Usage"
      type: "stat"
      targets:
        - expr: "(1 - (node_memory_MemAvailable_bytes / node_memory_MemTotal_bytes)) * 100"
          legendFormat: "Memory Usage"
        - expr: "sum by (instance, job)(avg by (mode, instance) (rate(node_cpu_seconds_total{mode!='idle'}[2m]))) * 100"
          legendFormat: "CPU Usage"
    - title: "Memory Usage in Percent over Time"
      type: "timeseries"
      targets:
        - expr: "(1 - (node_memory_MemAvailable_bytes / node_memory_MemTotal_bytes)) * 100"
    - title: "CPU Usage in Percent over Time"
      type: "timeseries"
      targets:
        - expr: "sum by (instance, job) (avg by (mode, instance) (rate(node_cpu_seconds_total{mode!='idle'}[2m])))"
...
